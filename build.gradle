buildscript {
    configurations.maybeCreate("pitest")
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.6'
        pitest 'org.pitest:pitest-junit5-plugin:0.11'
    }
}

plugins {
    id "idea"
    id "java"
    id "jacoco"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "org.sonarqube" version "2.8"
}

apply plugin: 'java-library'
apply plugin: "info.solidsoft.pitest"

ext {
    springBootVersion = '2.2.2.RELEASE'
}

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'


repositories {
    mavenCentral()
}

group = "com.github.mikesafonov"

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter")
    api("org.restcomm.smpp:ch-commons-util:7.0.6")
    api("org.restcomm.smpp:ch-commons-charset:7.0.6")
    api("org.restcomm.smpp:ch-commons-gsm:7.0.6")
    api("org.restcomm.smpp:ch-smpp:5.1.0-113")

    implementation("javax.validation:validation-api:2.0.1.Final")

    compileOnly("org.projectlombok:lombok:1.18.10")
    annotationProcessor("org.projectlombok:lombok:1.18.10")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    testCompileOnly("org.projectlombok:lombok:1.18.10")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.10")

    testImplementation("org.assertj:assertj-core:3.14.0")

    testImplementation("com.devskiller:jfairy:0.6.2")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

jacoco{
    toolVersion = "0.8.3"
}

jacocoTestReport{
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport, "pitest"
}


pitest {
    testPlugin = "junit5"
    targetClasses = ['com.github.mikesafonov.smpp.*']
    excludedClasses = ['com.github.mikesafonov.smpp.config.SmppAutoConfiguration']
    threads = 4
    outputFormats = ['HTML', 'XML']
    enableDefaultIncrementalAnalysis = true
    timestampedReports = false
    historyInputLocation = ".pitest/pitHistory.txt"
    historyOutputLocation = ".pitest/pitHistory.txt"
}
